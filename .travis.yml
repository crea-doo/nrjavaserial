# amd64 toolchain (used as a base for non-sudo compilation, which is faster) 
include: &toolchain_amd64
  sudo: false
  addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - gcc-4.8
        - g++-4.8
        - gcc-4.8-multilib
        - g++-4.8-multilib
        - g++-mingw-w64
        - g++-mingw-w64-i686
        - g++-mingw-w64-x86-64

# OSX amd64 toolchain
include: &toolchain_osx_amd64
  <<: *toolchain_amd64
  env:
    - LABEL=amd64_osx
    - ARCH=amd64
    - GPP_COMPILER=g++
    - GCC_COMPILER=gcc

# linux amd64 toolchain
include: &toolchain_linux_amd64
  <<: *toolchain_amd64
  env:
    - LABEL=amd64_linux
    - ARCH=amd64
    - GPP_COMPILER=g++-4.8
    - GCC_COMPILER=gcc-4.8

# cross toolchain (used as a base for multiarch cross-compilation configurations below) 
include: &toolchain_linux_cross
  dist: trusty
  sudo: required # for dpkg --add-architecture locking
  
# arm toolchain
include: &toolchain_linux_arm
  <<: *toolchain_linux_cross
  env:
    - LABEL=arm_linux
    - CROSS_TOOLCHAIN=true
    - ARCH=arm
    - GNU_VERSION=4.7
    - GNU_TRIPLET=arm-linux-gnueabi
    - GNU_MULTILIB_TRIPLET=arm-linux-gnueabi
    - GPP_COMPILER=arm-linux-gnueabi-g++
    - GCC_COMPILER=arm-linux-gnueabi-gcc
  
# armhf toolchain
include: &toolchain_linux_armhf
  <<: *toolchain_linux_cross
  env:
    - LABEL=armhf_linux
    - CROSS_TOOLCHAIN=true
    - ARCH=armhf
    - GNU_VERSION=4.8
    - GNU_TRIPLET=arm-linux-gnueabihf
    - GNU_MULTILIB_TRIPLET=arm-linux-gnueabihf
    - GPP_COMPILER=arm-linux-gnueabihf-g++
    - GCC_COMPILER=arm-linux-gnueabihf-gcc

# arm64 toolchain
include: &toolchain_linux_arm64
  <<: *toolchain_linux_cross
  env:
    - LABEL=arm64_linux
    - CROSS_TOOLCHAIN=true
    - ARCH=arm64
    - GNU_VERSION=4.8
    - GNU_TRIPLET=aarch64-linux-gnu
    - GNU_MULTILIB_TRIPLET=arm-linux-gnueabihf
    - GPP_COMPILER=aarch64-linux-gnu-g++
    - GCC_COMPILER=aarch64-linux-gnu-gcc

# Travis CI build matrix.  Each entry below will trigger an extra, parallel build on Travis.
matrix:
  include:

  # Compile Java as usual
  - language: java
    os: linux
    jdk: oraclejdk8

  - language: java
    os: linux
    jdk: openjdk7
    # Override ./gradlew and use gradle instead to overcome errors
    install: gradle assemble
    script: gradle check

  # Compile libs on different platforms
#  - language: c
#    os: osx
#    <<: *toolchain_osx_amd64
#    before_script:
#      - cd src/main/c
#    script:
#      - make -f Makefile.ubuntu64 clean osx

  - language: c
    os: linux
    <<: *toolchain_linux_amd64
    before_script:
      - cd src/main/c
    script:
      - make -f Makefile.ubuntu64 clean linux32
      - make -f Makefile.ubuntu64 clean linux64
      - make -f Makefile.ubuntu64 clean windows32
      - make -f Makefile.ubuntu64 clean windows64

    # Seems only package installation of 'g++-4.7-arm-linux-gnueabi' currently supported on Travis (not 4.8)
    # See https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-trusty
  - language: c
    os: linux
    <<: *toolchain_linux_arm
    before_script:
      - cd src/main/c
    script:
      - make -f Makefile.ubuntu64 clean arm5
      - make -f Makefile.ubuntu64 clean arm6
      - make -f Makefile.ubuntu64 clean arm7

  - language: c
    os: linux
    <<: *toolchain_linux_armhf
    before_script:
      - cd src/main/c
    script:
      - make -f Makefile.ubuntu64 clean arm6HF
      - make -f Makefile.ubuntu64 clean arm7HF

#  - language: c
#    os: linux
#    <<: *toolchain_linux_arm64
#    before_script:
#      - cd src/main/c
#    script:
#      - make -f Makefile.ubuntu64 clean linux32

before_install:
  - export CXX="${GPP_COMPILER}" CC="${GCC_COMPILER}";
  - if [[ "${CROSS_TOOLCHAIN}" == "true" ]]; then
      sudo rm -rf /etc/apt/sources.list.d/**;
      sudo rm /etc/apt/sources.list; 
      echo "deb [arch=amd64,i386] http://archive.ubuntu.com/ubuntu xenial main universe multiverse restricted" | sudo tee /etc/apt/sources.list;
      echo "deb [arch=${ARCH}] http://ports.ubuntu.com/ubuntu-ports xenial main universe multiverse restricted" | sudo tee -a /etc/apt/sources.list;
      echo "deb-src http://archive.ubuntu.com/ubuntu xenial main universe multiverse restricted" | sudo tee -a /etc/apt/sources.list;
      sudo dpkg --add-architecture ${ARCH};
      sudo apt-get update -yq;
      sudo apt-get install -y g++-${GNU_VERSION}-${GNU_TRIPLET} g++-${GNU_VERSION}-multilib-${GNU_MULTILIB_TRIPLET} liblockdev1-dev liblockdev1-dev:${ARCH};
      if [[ "${ARCH}" == "arm" ]]; then
        sudo apt-get install -y crossbuild-essential-armel;
      else
        sudo apt-get install -y crossbuild-essential-${ARCH};
      fi
    fi